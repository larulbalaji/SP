<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule   language="beanshell" name="Provisioning Policy - AD Distinguished Name" type="FieldValue">
  <Signature returnType="String">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="identity">
        <Description>
           The Identity object that represents the user needing the field value.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="value">
        <Description>
          The string value created.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <ReferencedRules>
    <Reference class="sailpoint.object.Rule" name="Provisioning Policy - AD Display Name"/>
  </ReferencedRules>
  <Source><![CDATA[
import sailpoint.object.Configuration;
    
serilog=org.apache.commons.logging.LogFactory.getLog("SERI.Rule.ADProvisioning.DistinguishedName");

// We will use the cube name, because we already guarenteed it will be unique.

String dn = null;  
String name = identity.getFirstname() + " " + identity.getLastname();
String dnBase = ",OU=Demo,DC=seri,DC=sailpointdemo,DC=com";



// lookup OU using Configuration Object
//       
confObject = context.getObjectByName(Configuration.class, "Location to OU Configuration");

suffix="";

// not documented is the fact that in the Provisioning Policy, the role gets passed in..
if(role!=null) {
  serilog.debug("Provisioning caused by role "+role.getName());
  isAdmin=role.getAttribute("adminRole");
  serilog.debug("adminRole="+isAdmin);
  if("true".equalsIgnoreCase(isAdmin)) {
    serilog.debug("suffixing with -adm");
    suffix="-adm";
  }
} else {
  serilog.debug("Provisioning not caused by role");
  String isPriv=objectRequest.getArgument("isPriv");
  serilog.debug("isPriv="+isPriv);
  if("true".equals(isPriv)) {
    serilog.debug("Privileged account specified..");
    suffix="-priv";
  }
}

if (null != confObject) {
  String location = identity.getAttribute("location");
  String ou = confObject.getString(location);

  cn="CN=" +name + suffix;


  if (null != ou) {
    dn = cn + ",OU=" + location + ",OU=" + ou + dnBase;
  } else {
    dn = cn + dnBase;
  }
}

return (dn)]]>;
  </Source>
</Rule>
