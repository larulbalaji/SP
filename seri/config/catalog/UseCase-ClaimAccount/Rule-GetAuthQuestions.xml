<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Get Authentication Questions">
  <Signature returnType="Object">
  </Signature>
  <Source><![CDATA[
  
import sailpoint.object.Filter;
import sailpoint.object.Identity;
import sailpoint.object.ProvisioningPlan;
import sailpoint.object.ProvisioningPlan.AccountRequest;
import sailpoint.object.ProvisioningPlan.AttributeRequest;
import sailpoint.object.QueryOptions;
import sailpoint.tools.Util;

import sailpoint.object.Identity;
import sailpoint.object.Link;
import sailpoint.object.Application; 
import sailpoint.object.QueryOptions;  
import sailpoint.object.Filter;
import sailpoint.object.Rule;

import sailpoint.object.AuthenticationAnswer;
import sailpoint.object.AuthenticationQuestion;
import sailpoint.tools.Internationalizer;
import java.util.Locale;

serilog=org.apache.commons.logging.LogFactory.getLog("SERI.Rule.GetAuthQuestions");

public List getAuthenticationQuestions(){

	Locale locale=Locale.ENGLISH;
	List<AuthenticationQuestion> questions=context.getObjects(AuthenticationQuestion.class);
	List questionsList = new ArrayList();
	if (questions != null) {
		for (AuthenticationQuestion question : questions ) {

			String intlQuestion =Internationalizer.getMessage(question.getQuestion(), locale);
			List questionEntry = new ArrayList();
			questionEntry.add(question.getQuestion()); //add the key
			questionEntry.add(intlQuestion); //add the value

			serilog.debug("question:" + question.toXml());
			serilog.debug("english question:" + intlQuestion);
			questionsList.add(questionEntry);
		}
	}

	return questionsList;
}

return getAuthenticationQuestions();
    ]]></Source>
</Rule>