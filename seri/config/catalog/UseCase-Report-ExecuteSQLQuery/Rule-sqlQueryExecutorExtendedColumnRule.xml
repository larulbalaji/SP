<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint><Rule language="beanshell" name="SQL Query Executor Extended Column Rule" >
  
  <Source><![CDATA[
import sailpoint.reporting.ReportingLibrary;
import sailpoint.object.ReportColumnConfig;
import java.util.ArrayList;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.io.BufferedReader;
import java.io.StringReader;
import java.lang.StringBuilder;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import sailpoint.object.Field;

List getColumnNamesForQuery(String query) {
    
    List returnedCols = new ArrayList();
    
    if(query == null || query.equals("")) {
        return returnedCols;
    }
        
    // execute the query and fetch column names
    Connection conn = null;
    try {
      conn = context.getJdbcConnection();
      PreparedStatement sqlCommand = conn.prepareStatement(query);
      ResultSet rs = sqlCommand.executeQuery();
      ResultSetMetaData rsmd = rs.getMetaData();
  
      for (int i = 1; i <= rsmd.getColumnCount(); i++) {
          String columnName = rsmd.getColumnName(i);
          String columnLabel = rsmd.getColumnLabel(i);
          serilog.debug("Column name: "+columnName);
          serilog.debug("Column label: "+columnLabel);
  
        //create the ReportColumnConfig
        ReportColumnConfig col = new ReportColumnConfig(columnLabel, columnLabel, "java.lang.String");
        col.setExtendedColumn(true);
        returnedCols.add(col);
      }
    }
    catch (SQLException sqle) {
        serilog.error("Something went wrong while executing the SQL statement: " +sqle.getMessage());
        serilog.debug("Form:" + form.toXml());
        Field fErrors = form.getField("errorArea");
        fErrors.setHidden(false);
        fErrors.setValue("Invalid SQL statement: " + sqle.getMessage());
    }
        
    return returnedCols;
        
}

serilog=org.apache.commons.logging.LogFactory.getLog("SERI.Rule.extendedColumn");
serilog.debug("----Rule Start----");

serilog.debug("Generating columns for the SQL Query Executor report");

List newCols = new ArrayList();

// Get the SQL query stored in the form
//
Map formValues = form.getFieldValues();
if (formValues != null && formValues.containsKey("normalisedQuery")){
    String query = formValues.get("normalisedQuery");
    serilog.debug("Got SQL query:"+query);
    newCols = getColumnNamesForQuery(query);
}

serilog.debug("Returning newCols:\n"+newCols);
return newCols;

  ]]></Source>
</Rule>
</sailpoint>