<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="SERI-ScopeCorrelation" type="ScopeCorrelation">
  <Description>Given an identity and the defined scope correlation attribute and value, determine the correct assigned scope for the Identity.  This can return a single Scope (if we can correlate to a distinct scope), a List of Scopes (if we can't determine a distinct scope), or null (if there is not an assigned scope for the given identity).</Description>
  <Signature returnType="Object">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="identity">
        <Description>
          The identity for which to correlate the assigned scope.
        </Description>
      </Argument>
      <Argument name="scopeCorrelationAttribute">
        <Description>
          The name of the scope correlation attribute on the identity.
        </Description>
      </Argument>
      <Argument name="scopeCorrelationAttributeValue">
        <Description>
          The value of the scope correlation attribute on the given identity.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="scopes">
        <Description>
          Either a Scope or a List that contains multiple scopes that could
          correlate to the given identity.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>
    <![CDATA[
import sailpoint.object.Identity;
import sailpoint.object.Scope;
import sailpoint.tools.GeneralException;

serilog=org.apache.commons.logging.LogFactory.getLog("SERI.Rule.SERI-ScopeCorrelation");
String department;
Scope all;
try {
   // if scope "All" doesn't exist yet, create it
   all = context.getObjectByName(Scope.class, "All" ); 
   if ( null == all ) {
      all = new Scope("All");
      context.saveObject(all);
      String allId = all.getId();
      all.setDisplayName("All");
      all.setPath(allId);
      all.setAssignedScope(all);
      context.saveObject(all);
      context.commitTransaction();
      serilog.debug("Scope 'All' created");
   }
   if( null == identity ) {
     String msg = "Identity not defined";
     GeneralException ge = new GeneralException(msg);
     throw ge;
     return msg;
   }
   department = identity.getStringAttribute("department");
   if( null == department ) {
     String msg = "Department not set on " + identity.getName() + ", can't determine Scope";
     GeneralException ge = new GeneralException(msg);
     throw ge;
     return msg;
   }
   
   // Assign scope "all" to any Identity with the department of 
   // "Regional Operations" or Executive Management"
   if ( department.equals("Regional Operations") ||
        department.equals("Executive Management") ) {
     serilog.debug("Scope is 'All'" );
     return all; 
   }
} catch (GeneralException e) {
  serilog.error("Error creating scope.", e);
  return null;
}

// Okay, Identity is not in  "Regional Operations" nor in "Executive Management"
String scopeName;

// Lets figure out where to place the identity

// If the department is either "Inventory", "Accounting" or "Finance" 
// place them into "Finance & Accounting"
if ( department.equals("Accounting") ||
     department.equals("Finance")      ||
     department.equals("Inventory")      ) {
  scopeName = "Finance & Accounting"; 
}

// If the department is either "Engineering" or "Information Technology" 
// place them into "IT"
if ( department.equals("Engineering") ||
     department.equals("Information Technology")      ) {
  scopeName = "IT"; 
}

// If the department is  "Human Resources" 
// place them into "HR"
if ( department.equals("Human Resources") ) {
  scopeName = "HR"; 
}

// If Scope "scopeName" does not exist, try to create it
try {
   Scope scope = context.getObjectByName(Scope.class, scopeName );
   if (scope == null) {
      // If it doesn't exist, then we need to create it as a child of the All scope 
      scope = new Scope(scopeName);
      context.saveObject(scope);
      all.addScope(scope);
      scope.setDisplayName(scopeName);
      scope.setAssignedScope(scope);
      context.saveObject(scope);
      context.saveObject(all);
      context.commitTransaction();
      serilog.debug("Scope '" + scopeName + "' created");
   }
   serilog.debug("Scope is '" + scopeName + "'" );
   return scope;
} catch (GeneralException e) {
  serilog.error("Error creating scope.", e);
  return null;
}
    ]]>
  </Source>
</Rule>
