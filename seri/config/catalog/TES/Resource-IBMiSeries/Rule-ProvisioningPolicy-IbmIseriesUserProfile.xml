<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Provisioning Policy - IBM iSeries User Profile" type="FieldValue">
  <Description/>
  <Signature returnType="String">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="identity" type="Identity">
        <Description>
          The Identity object that represents the user needing the field value.
        </Description>
      </Argument>
      <Argument name="link" type="Link">
        <Description>
          The sailpoint.object.Link that is being acted upon. If the link is not applicable,
          this value will be null.
        </Description>
      </Argument>
      <Argument name="group" type="ManagedAttribute">
        <Description>
          The sailpoint.object.ManagedAttribute that is being acted upon. If the managed attribute
          is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="project" type="ProvisioningProject">
        <Description>
          The provisioning project being acted upon. If a provisioning project is not applicable,
          the value will be null.
        </Description>
      </Argument>
      <Argument name="accountRequest" type="ProvisioningPlan.AccountRequest">
        <Description>
          The account request. If an account request is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="objectRequest" type="ProvisioningPlan.ObjectRequest">
        <Description>
          The object request. If an object request is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="role" type="Bundle">
        <Description>
          The role with the template we are compiling. If the role is
          not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="application" type="Application">
        <Description>
          The sailpont.object.Application with the template we are compiling. If the application
          is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="template" type="Template">
        <Description>
          The Template that contains this field.
        </Description>
      </Argument>
      <Argument name="field" type="Field">
        <Description>
          The current field being computed.
        </Description>
      </Argument>
      <Argument name="current" type="Object">
        <Description>
          The current value corresponding to the identity or account attribute that the field represents.
          If no current value is set, this value will be null.
        </Description>
      </Argument>
      <Argument name="operation" type="ProvisioningPlan.Operation">
        <Description>
          The operation being performed.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="value">
        <Description>
          The string value created.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source><![CDATA[
    import sailpoint.connector.Connector;
    import sailpoint.connector.ConnectorFactory;
    import sailpoint.object.Application;
    import sailpoint.object.Filter;
    import sailpoint.object.Identity;
    import sailpoint.object.QueryOptions;
    import sailpoint.object.Capability;
    import sailpoint.object.ResourceObject;
    import sailpoint.object.Link;
   
    serilog=org.apache.commons.logging.LogFactory.getLog("SERI.Rule.IBMiSeries.UserName");
    
    String first = identity.getFirstname();
    serilog.debug("Firstname: " + first);
    String lastname = identity.getLastname();
    serilog.debug("Lastname: " + lastname);
  
    if (first != null) {
        //get the initial
        first = first.substring(0,1);
    }
    
    String base = first + lastname;
    if (base.length() > 8) {
        base = base.substring(0,7);
    }
    
    serilog.debug("base:" + serilog);
    
    Boolean unique = false;
    Integer counter = 0;
    String uniqueUser = base.toUpperCase();
    
    while (!unique) {
        QueryOptions qo = new QueryOptions();
        
        serilog.debug("query for uniqueUser:" + uniqueUser);
        qo.addFilter(Filter.eq("nativeIdentity", uniqueUser));  
        qo.addFilter(Filter.eq("application.name", (String) application.getName()));  
    
        serilog.debug("before query");
        int count = context.countObjects(Link.class,qo);
        serilog.debug("after query count is:" + count); 
        if (count <= 0) {
            serilog.debug("found uniqueUser:" + uniqueUser);
            unique = true;
        }
        
        if (!unique) {
            uniqueUser = base + counter.toString();
            serilog.debug("user not unique next name to try is:" + uniqueUser);
        }
    
    }
    
    serilog.debug("returning:" + uniqueUser);
    return uniqueUser;
    
]]></Source>
</Rule>
