<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule   language="beanshell"  name="Rule_ParseApplicationLOAReturnPolicies" type="Workflow">
  <Description>A rule used by a Workflow to determine a step action or variable value.

Note that an Attributes map of all variables from the current WorkflowContext, merged with the arguments from the Step, is also passed into the workflow rule.</Description>
  <Signature returnType="Object"/>
  <Source><![CDATA[
import sailpoint.object.*;
  
// Expect: java.lang.String identityName
	
serilog=org.apache.commons.logging.LogFactory.getLog("SERI.Rule.LOA.Rule_ParseApplicationLOAPolicies");

serilog.debug("In Rule_ParseApplicationLOAPolicies");
serilog.debug("Got here:"+ identityName);
Identity identity = context.getObjectByName(Identity.class,identityName);
serilog.debug("Got here:"+identity);
//iterate over each link on the user. Look at the deprovisioning attributes assigned to that
//application definition for that link link.
//then set the application deprovisioning map accordingly.
Map accountDeprovisioningMap = new HashMap();
serilog.debug("Got here:bb");
List links = identity.getLinks();
for(Link aLink : links) {
  Application applicationObject = aLink.getApplication();
  
  if(applicationObject!= null) {
    HashMap map = new HashMap();
    map.put("accounReturntLOAScenario",  applicationObject.getAttributeValue("accounReturntLOAScenario")); 
    map.put("returnLOARule",  applicationObject.getAttributeValue("returnLOARule"));
    serilog.debug("loaApp map:" + map);
    accountDeprovisioningMap.put(applicationObject.getName(), map);
  } else {
    serilog.debug("applicationObject is null");
  }
}

serilog.debug("Return  Rule_ParseApplicationLOAPolicies");
return accountDeprovisioningMap;
  ]]></Source>
</Rule>
