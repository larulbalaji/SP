<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Build Dynamic Approval Owner" type="Workflow">
  <Description>A rule used by a Workflow to determine a step action or variable value.

Note that an Attributes map of all variables from the current WorkflowContext, merged with the arguments from the Step, is also passed into the workflow rule.</Description>
  <Signature returnType="Object"/>
  <Source><![CDATA[
import sailpoint.workflow.IdentityLibrary; 
import sailpoint.workflow.IdentityApplicationOwnerLibrary;
import sailpoint.workflow.IdentityAttributeOwnerLibrary; 
import sailpoint.workflow.IdentityRuleOwnerLibrary;
import sailpoint.workflow.IdentityApplicationRuleOwnerLibrary;
import sailpoint.workflow.IdentityApplicationAttributeOwnerLibrary;

import sailpoint.object.*;  
import sailpoint.web.*;  
import sailpoint.api.ManagedAttributer;

List owners = new ArrayList();

		if(approvalOwnerType.equals("Manager"))
		{
			IdentityLibrary il = new IdentityLibrary();
			return il.buildManagerApproval(wfcontext);
		}
		else if(approvalOwnerType.equals("Application Owner"))
		{
			IdentityApplicationOwnerLibrary il = new IdentityApplicationOwnerLibrary();
			return il.buildApplicationOwnerApprovals(wfcontext);
		}
		else if(approvalOwnerType.equals("Object Owner"))
		{
			IdentityLibrary il = new IdentityLibrary();
			return il.buildOwnerApprovals(wfcontext);
		}
		else if(approvalOwnerType.equals("Rule"))
		{
		    
		    if(attributeObjectType.equals("application"))
		    {
		       
		        IdentityApplicationRuleOwnerLibrary il = new IdentityApplicationRuleOwnerLibrary();
				theOwner = il.buildApplicationOwnerApprovals(wfcontext);
		    }
		    else     
		    {
		    	IdentityRuleOwnerLibrary il = new IdentityRuleOwnerLibrary();
				return il.buildAttributeRuleOwnerApprovals(wfcontext);
		    }
		    
		}
		else if(approvalOwnerType.equals("Rule Attribute"))
		{
		    String ruleName = null;
		    
		    if(attributeObjectType.equals("application"))
		    {
		       
		        IdentityApplicationRuleOwnerLibrary il = new IdentityApplicationRuleOwnerLibrary();
				return il.buildApplicationOwnerApprovals(wfcontext);
		    }
		    else
		    {
		    	IdentityRuleOwnerLibrary il = new IdentityRuleOwnerLibrary();
				return il.buildAttributeRuleOwnerApprovals(wfcontext);
		    }
		    
		
			
		}
		else if(approvalOwnerType.equals("Attribute"))
		{
		   System.out.println("here!! :   in attribute ");
			String theOwner = null;
			
			if(attributeObjectType.equals("application"))
 		    {
 		       
 		        //Application applicationObject = wfcontext.getSailPointContext().getObjectByName(Application.class, item.getApplication());
 		    	IdentityApplicationAttributeOwnerLibrary il = new IdentityApplicationAttributeOwnerLibrary();
				return  il.buildApplicationOwnerApprovals(wfcontext);
 		    }
 		    else
		    {
		    	IdentityAttributeOwnerLibrary il = new IdentityAttributeOwnerLibrary();
				return  il.buildAttributeOwnerApprovals(wfcontext);
		    }
 		    
 		    System.out.println("owner is!! :    "+ approvalOwnerAttribute); 
			return theOwner;
			
		}
		else if(approvalOwnerType.equals("Specific User"))
		{
		
			System.out.println("XXXXXXXXXX THE OWNER IS:   "+ approvalOwner);
		 	return approvalOwner;
		}
        else return "spadmin";
]]></Source>
</Rule>
