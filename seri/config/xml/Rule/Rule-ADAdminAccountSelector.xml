<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="AD Admin Account Selector"
      type="AccountSelector">
  <Description>
    AccountSelector Rules are used by the role modeler to automatically select a target account for provisioning when there are multiple candidates.

    The return value is a Link instance that represents the selection. Value can be:

    null - indicates that no automatic selection can be made

    "prompt" - indicates that a separate account selector should be presented for the role

    existing Link - the selected Link from the list of possible target Links

    a new Link instance - indicates that a new account must be created with the identity specified by the
    create policy, or manually; in this case, the Link instance returned will have a null nativeIdentity attribute

  </Description>
  <Signature returnType='Map'>
    <Inputs>
      <Argument name='source'>
        <Description>
          The application doing the provisioning.
        </Description>
      </Argument>
      <Argument name='assignedRole'>
        <Description>
          The assigned role being expanded.
        </Description>
      </Argument>
      <Argument name='role'>
        <Description>
          The IT role being provisioned that had the assignment rule.
        </Description>
      </Argument>
      <Argument name='identity'>
        <Description>
          The target identity.
        </Description>
      </Argument>
      <Argument name='application'>
        <Description>
          The target application object.
        </Description>
      </Argument>
      <Argument name='links'>
        <Description>
          A list of the possible target Links.
        </Description>
      </Argument>
      <Argument name="isSecondary">
        <Description>
          True if this is not the first assignment.
        </Description>
      </Argument>
      <Argument name="project">
        <Description>
          The provisioning project.
        </Description>
      </Argument>
      <Argument name="accountRequest">
        <Description>
          The account request.
        </Description>
      </Argument>
      <Argument name="allowCreate">
        <Description>
          True if account creation is allowed.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name='selection'>
        <Description>
          A Link instance that represents the selection. Value can be:
          null - indicates that no automatic selection can be made
          Link - the selected Link from the list of possible target Links
          a new Link instance - indicates that a new account must be created with the identity specified by the
          create policy, or manually; in this case, the Link instance returned will have a null nativeIdentity attribute
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>
    <![CDATA[
import sailpoint.object.Link;
import sailpoint.object.Identity;
import sailpoint.object.Bundle;
import java.util.List;

serilog=org.apache.commons.logging.LogFactory.getLog("SERI.Rule.ADAdminAccountSelector");

// This rule is for selecting the Windows account to assign AD group memberships to.
//
// Firstly, we need to figure out if this IT role is an administrative role or not.
// In SERI we do this with the 'adminRole' flag on the role
// In the case of 
// - If we find a Link with a nativeIdentity that starts with "adm_", this is the account we should assign it to.
// - If we find more than one (unlikely), we should ask which to assign to - we return null to indicate this
// - If we find none, then we create a new Link and return it.

serilog.debug("role="+role.toXml());

boolean isAdmin=role.getAttribute("adminRole");
serilog.debug("adminRole="+isAdmin);

Link selectedLink = null;
if (links != null ) {
    serilog.debug("Checking "+links.size()+" links");
    for (Link link : links) {
        String id = link.getNativeIdentity();
        serilog.debug("Link ID="+id);
        String sam=link.getAttribute("sAMAccountName");
        // link id is going to be the full DN
        // easier to check sAMAccountName
        // for SERI, if it's an admin account, cn is suffixed with -adm
        // and sAMAccountName is prefixed with adm_
        if ( isAdmin && sam.toLowerCase().startsWith("adm_") ||
             !isAdmin && !sam.toLowerCase().startsWith("adm_") ) {
            if (selectedLink != null) {
                // This is the second one we've found, so bail out, because we're unable to choose just one.
                serilog.debug("Multiple links found. Returning null to force manual selection");
                return null;
            }
            selectedLink = link;
        }
    }
}

// If selectedLink is non-null, it contains the chosen account information, otherwise we want to return null anyway
// since we didn't find anything.
// If we wanted this rule to indicate that the calling code should create a new account, we would create and
// return a new Link instance with the nativeIdentity attribute set to null.
if (selectedLink!=null) {
  serilog.debug("Returning found link");
  return selectedLink;
}
serilog.debug("Returning new Link()");
return new Link();
    ]]>
  </Source>
</Rule>